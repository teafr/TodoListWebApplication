@model TodoListViewModel
@inject UserManager<ApplicationUser> userManager;

@{
    ViewBag.Title = @Model.Title + " Tasks";
    Layout = "~/Views/Shared/_TodoListLayout.cshtml";

    var user = await userManager.FindByNameAsync(Context.User.Identity.Name);
    bool canEdit = Model.Editors?.Contains(user) ?? false;
    string? searchQuery = Context.Request.Query["searchQuery"];
}

<h2>@Model.Title Tasks</h2>
<p>@Model.Description</p>

@await Html.PartialAsync("_TasksPartial", Model.TasksList?.Tasks.Skip((Model.TasksList.PaginationInfo.CurrentPage - 1) * Model.TasksList.PaginationInfo.PageSize).Take(Model.TasksList.PaginationInfo.PageSize).ToList())

@if (canEdit)
{
    <a asp-action="AddTask" asp-controller="Tasks" asp-route-todoListId="@Model.Id" class="btn btn-secondary w-100">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2" />
        </svg>
        Add task
    </a>
}

@if (Model.TasksList is not null)
{
    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center align-items-center m-0 mt-3">
            <li class="page-item">
                <a class="page-link text-secondary" href="@Url.Action("GetTasks", "TodoLists", new { todoListId = Model.Id, currentPage = Model.TasksList.PaginationInfo.CurrentPage - 1 })" aria-label="Previous">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-left-fill" viewBox="0 0 16 16">
                        <path d="m3.86 8.753 5.482 4.796c.646.566 1.658.106 1.658-.753V3.204a1 1 0 0 0-1.659-.753l-5.48 4.796a1 1 0 0 0 0 1.506z" />
                    </svg>
                </a>
            </li>
            @foreach (var i in Enumerable.Range(1, Model.TasksList.PaginationInfo.TotalPages))
            {
                <li class="page-item">
                    <a class="page-link @(i == Model.TasksList.PaginationInfo.CurrentPage ? "active bg-secondary text-light" : "text-secondary")"
                       href="@Url.Action("GetTasks", "TodoLists", new { todoListId = Model.Id, currentPage = i })">@i</a>
                </li>
            }
            <li class="page-item">
                <a class="page-link text-secondary" href="@Url.Action("GetTasks", "TodoLists", new { todoListId = Model.Id, currentPage = Model.TasksList.PaginationInfo.CurrentPage + 1 })" aria-label="Next">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-right-fill" viewBox="0 0 16 16">
                        <path d="m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z" />
                    </svg>
                </a>
            </li>
        </ul>
    </nav>
}

<div>
    <h5>Members</h5>
    @if (Model.Editors is not null && Model.Editors.Any())
    {
        <ul class="list-group mb-3">
            @foreach (var editor in Model.Editors)
            {
                <li class="list-group-item">
                    @editor.UserName
                    @if (editor.UserName == user.UserName)
                    {
                        <span class="text-secondary">(you)</span>
                    }

                    @if (editor.Id == Model.Owner.Id)
                    {
                        <span class="text-danger">- Admin</span>
                    }
                    else
                    {
                        <span class="text-primary">- Editor</span>
                    }

                    @if (user.UserName == Model.Owner.UserName)
                    {
                        @if (editor.Id == Model.Owner.Id)
                        {
                            <form asp-action="ChangeListOwner" asp-controller="TodoLists" method="post" class="float-end">
                                <input type="hidden" name="todoListId" value="@Model.Id" />
                                <button type="submit" class="btn text-secondary btn-sm">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                                        <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325" />
                                    </svg>
                                </button>
                            </form>
                        }
                        else
                        {
                            <form asp-action="RemoveEditor" asp-controller="TodoLists" method="post" class="float-end">
                                <input type="hidden" name="todoListId" value="@Model.Id" />
                                <input type="hidden" name="editorId" value="@editor.Id" />
                                <button type="submit" class="btn btn-sm text-danger">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                                        <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47M8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5" />
                                    </svg>
                                </button>
                            </form>
                        }
                    }
                </li>
            }
        </ul>
    }
    else
    {
        <p class="text-secondary">No members found.</p>
    }
</div>
@if (user.UserName == Model.Owner?.UserName)
{
    <button class="btn btn-outline-primary mb-2" onclick="toggleForm('addEditorForm')">Add editor</button>
}

<form asp-action="GetTasks" asp-controller="TodoLists" id="addEditorForm" method="get" class="input-group-sm @(string.IsNullOrEmpty(searchQuery) ? "d-none" : "")">
    <input type="hidden" name="todoListId" value="@Model.Id" />
    <div class="d-flex w-100">
        <input type="text" name="searchQuery" class="form-control" value="@searchQuery" placeholder="Type to search user..." aria-label="Search editor">
        <button class="btn text-secondary" type="submit">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
            </svg>
        </button>
    </div>
</form>

@if (!string.IsNullOrEmpty(searchQuery))
{
    <div class="mt-1">
        @await Component.InvokeAsync("SearchEditors", new { todoListId = Model.Id, searchQuery = searchQuery })
    </div>
}